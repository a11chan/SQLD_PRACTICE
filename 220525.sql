--6.4.14 INSERT문에 사용되는 서브쿼리
CREATE TABLE TB_SUBWAY_STATN_TK_GFF_SUM
( 
  SUBWAY_STATN_NO CHAR(6)
, TK_GFF_CNT NUMBER(15)
, CONSTRAINT TB_SUBWAY_STATN_TG_GFF_SUM_PK PRIMARY KEY(SUBWAY_STATN_NO)
);

--INSERT 문의 VALUES 절에 사용된 서브쿼리
INSERT INTO TB_SUBWAY_STATN_TK_GFF_SUM
VALUES ('000615',
        (SELECT SUM(TK_GFF_CNT)
           FROM TB_SUBWAY_STATN_TK_GFF
          WHERE SUBWAY_STATN_NO = '000615'
        )
       );

SELECT * FROM TB_SUBWAY_STATN_TK_GFF_SUM;

DROP TABLE TB_SUBWAY_STATN_TK_GFF_SUM PURGE;

--VIEW 사용 실습
CREATE OR REPLACE VIEW V_STARBUCKS_POPLTN_INFO
AS
SELECT A.BSSH_NO
     , A.CMPNM_NM
     , A.BHF_NM
     , A.ADSTRD_CD
     , B.ADSTRD_NM
     , SUM(C.POPLTN_CNT) AS SUM_POPLTN_CNT
  FROM TB_BSSH A
     , TB_ADSTRD B
     , TB_POPLTN C
 WHERE ( CMPNM_NM LIKE '%스타벅스%'
         OR
         UPPER(CMPNM_NM) LIKE '%STARBUCKS%'
       )
   AND A.ADSTRD_CD = B.ADSTRD_CD
   AND B.ADSTRD_CD = C.ADSTRD_CD
   AND C.STD_YM = '202010'
   AND C.POPLTN_SE_CD = 'T'
 GROUP BY A.BSSH_NO, A.CMPNM_NM, A.BHF_NM, A.ADSTRD_CD, B.ADSTRD_NM
 ORDER BY A.BSSH_NO, A.CMPNM_NM, A.BHF_NM, A.ADSTRD_CD, B.ADSTRD_NM
;

--6-56 VIEW 조회
SELECT A.BSSH_NO
     , A.CMPNM_NM
     , A.BHF_NM
     , A.ADSTRD_CD
     , A.ADSTRD_NM
     , A.SUM_POPLTN_CNT
  FROM V_STARBUCKS_POPLTN_INFO A
 WHERE ADSTRD_NM LIKE '%광주광역시%'
 ORDER BY A.SUM_POPLTN_CNT DESC
;

--VIEW 제거
DROP VIEW V_STARBUCKS_POPLTN_INFO;

--그룹함수를 사용하지 않는 합계 데이터
SELECT A.AGRDE_SE_CD
     , SUM(A.POPLTN_CNT) AS POPLTN_CNT
  FROM TB_POPLTN A
 WHERE A.STD_YM = '202010'
   AND A.POPLTN_SE_CD = 'T'
 GROUP BY A.AGRDE_SE_CD
 ORDER BY A.AGRDE_SE_CD
;

--6.5.3 ROLLUP 함수를 이용한 합계 데이터
SELECT A.AGRDE_SE_CD
     , SUM(A.POPLTN_CNT) AS POPLTN_CNT
  FROM TB_POPLTN A
 WHERE A.STD_YM = '202010'
   AND A.POPLTN_SE_CD = 'T'
 GROUP BY ROLLUP(A.AGRDE_SE_CD)
 ORDER BY A.AGRDE_SE_CD
;

SELECT A.AGRDE_SE_CD
     , A.POPLTN_SE_CD
     , SUM(A.POPLTN_CNT) AS POPLTN_CNT
  FROM TB_POPLTN A
 WHERE A.STD_YM = '202010'
   AND A.POPLTN_SE_CD IN ('M', 'F')
 GROUP BY ROLLUP(A.AGRDE_SE_CD, A.POPLTN_SE_CD)
 ORDER BY A.AGRDE_SE_CD
;

--6-62 합계 데이터 출력 - ROLLUP, GROUPING 함수 사용
SELECT CASE WHEN GROUPING(A.AGRDE_SE_CD) = 0
            THEN A.AGRDE_SE_CD ELSE '전체합계' END AS AGRDE_SE_CD
     , CASE WHEN GROUPING(A.POPLTN_SE_CD) = 0
            THEN A.POPLTN_SE_CD ELSE '연령대별남녀합계' END AS POPLTN_SE_CD
     , SUM(A.POPLTN_CNT) AS POPLTN_CNT
  FROM TB_POPLTN A
 WHERE A.STD_YM = '202010'
   AND A.POPLTN_SE_CD IN ('M', 'F')
 GROUP BY ROLLUP(A.AGRDE_SE_CD, A.POPLTN_SE_CD)
 ORDER BY A.AGRDE_SE_CD
;

--6.5.5 CUBE 함수를 이용한 합계 데이터 출력
SELECT CASE WHEN GROUPING_AGRDE_SE_CD = 1 AND GROUPING_POPLTN_SE_CD = 1
            THEN '전체합계'
            WHEN GROUPING_AGRDE_SE_CD = 1 AND GROUPING_POPLTN_SE_CD = 0
            THEN '연령대별합계'
            WHEN GROUPING_AGRDE_SE_CD = 0 AND GROUPING_POPLTN_SE_CD = 1
            THEN '성별합계'
            WHEN GROUPING_AGRDE_SE_CD = 0 AND GROUPING_POPLTN_SE_CD = 0
            THEN '연령대+성별합계' ELSE '' END AS 합계구분
    , NVL(AGRDE_SE_CD, '연령대합계') AS AGRDE_SE_CD
    , NVL(POPLTN_SE_CD, '성별합계') AS POPLTN_SE_CD
    , POPLTN_CNT
FROM 
(
SELECT A.AGRDE_SE_CD
       , GROUPING(A.AGRDE_SE_CD) AS GROUPING_AGRDE_SE_CD
       , A.POPLTN_SE_CD
       , GROUPING(A.POPLTN_SE_CD) AS GROUPING_POPLTN_SE_CD
       , SUM(A.POPLTN_CNT) AS POPLTN_CNT
    FROM TB_POPLTN A
   WHERE A.STD_YM = '202010'
     AND A.POPLTN_SE_CD IN ('M', 'F')
   GROUP BY CUBE(A.AGRDE_SE_CD, A.POPLTN_SE_CD)
   ORDER BY A.AGRDE_SE_CD
) A
;

--UNION ALL + GROUP BY 를 이용한 합계 데이터 출력
SELECT
       A.AGRDE_SE_CD AS AGRDE_SE_CD
     , '성별전체' AS POPLTN_SE_CD
     , SUM(POPLTN_CNT) POPLTN_CNT
  FROM TB_POPLTN A
 WHERE A.STD_YM = '202010'
   AND A.POPLTN_SE_CD IN ('M', 'F')
 GROUP BY AGRDE_SE_CD
UNION ALL
SELECT
       '연령대별전체' AS AGRDE_SE_CD
     , A.POPLTN_SE_CD AS POPLTN_SE_CD
     , SUM(POPLTN_CNT) POPLTN_CNT
  FROM TB_POPLTN A
 WHERE A.STD_YM = '202010'
   AND A.POPLTN_SE_CD IN ('M', 'F')
 GROUP BY POPLTN_SE_CD
UNION ALL
SELECT
       '연령대별전체' AS AGRDE_SE_CD
     , '성별전체' AS POPLTN_SE_CD
     , SUM(POPLTN_CNT) POPLTN_CNT --GROUP BY 없이 쓸 수도 있음
  FROM TB_POPLTN A
 WHERE A.STD_YM = '202010'
   AND A.POPLTN_SE_CD IN ('M', 'F')
 ORDER BY AGRDE_SE_CD, POPLTN_SE_CD, POPLTN_CNT
;

--GROUPING SETS를 이용한 합계 데이터 출력
SELECT
       NVL(AGRDE_SE_CD, '연령대별전체') AS AGRDE_SE_CD
     , NVL(POPLTN_SE_CD, '성별전체') AS POPLTN_SE_CD
     , SUM(POPLTN_CNT) POPLTN_CNT
  FROM TB_POPLTN A
 WHERE A.STD_YM = '202010'
   AND A.POPLTN_SE_CD IN ('M', 'F')
 GROUP BY GROUPING SETS(AGRDE_SE_CD, POPLTN_SE_CD, ())
 ORDER BY AGRDE_SE_CD, POPLTN_SE_CD, POPLTN_CNT
;

SELECT *
  FROM (
        SELECT A.ADSTRD_CD
             , B.ADSTRD_NM
             , A.STD_YM
             , A.POPLTN_SE_CD
             , A.AGRDE_SE_CD
             , A.POPLTN_CNT
             , RANK() OVER(ORDER BY A.POPLTN_CNT DESC) AS RANK
             , DENSE_RANK() OVER(ORDER BY A.POPLTN_CNT DESC) AS DENSE_RANK
             , ROW_NUMBER() OVER(ORDER BY A.POPLTN_CNT DESC) AS ROW_NUMBER
          FROM TB_POPLTN A
             , TB_ADSTRD B
         WHERE A.AGRDE_SE_CD = '100'
           AND A.STD_YM = '202010'
           AND A.POPLTN_SE_CD = 'F'
           AND A.ADSTRD_CD = B.ADSTRD_CD
         ORDER BY A.POPLTN_CNT DESC
       )
       WHERE ROWNUM <= 10
;

--6.6.5 집계 관련 함수 - 인라인뷰 서브쿼리, 윈도우절 사용
SELECT A.ADSTRD_CD
     , A.ADSTRD_NM
     , A.AGRDE_SE_CD
     , A.POPLTN_CNT
     , MAX(A.POPLTN_CNT) OVER(PARTITION BY A.AGRDE_SE_CD) AS 최대_인구수
     , MIN(A.POPLTN_CNT) OVER(PARTITION BY A.AGRDE_SE_CD) AS 최소_인구수
     , ROUND(AVG(A.POPLTN_CNT) OVER(PARTITION BY A.AGRDE_SE_CD),2) AS 평균_인구수
     , ROUND(AVG(A.POPLTN_CNT) OVER(PARTITION BY A.AGRDE_SE_CD --AVG의 연산 범위가 현재행±1이기 때문에 행마다 다른 평균값 출력
                                        ORDER BY A.POPLTN_CNT ROWS BETWEEN 1 PRECEDING --윈도우절 -> AVG 함수 범위 지정
                                                                       AND 1 FOLLOWING --윈도우절
                                   ), 2) AS 평균인구수_1_1
  FROM 
     (
      SELECT A.ADSTRD_CD
           , B.ADSTRD_NM AS ADSTRD_NM --인구 테이블 행정동 코드에 이름 달아줄려고 넣은 코드
           , A.AGRDE_SE_CD
           , A.POPLTN_CNT
        FROM TB_POPLTN A, TB_ADSTRD B
       WHERE A.POPLTN_SE_CD = 'T'
         AND A.STD_YM = '202010'
         AND A.ADSTRD_CD = B.ADSTRD_CD --인구 테이블 행정동 코드에 이름 달아줄려고 넣은 코드
         AND A.POPLTN_CNT > 0
         AND B.ADSTRD_NM LIKE '경기도%고양시%덕양구%'
      ) A
;

SELECT (84+584+667)/3 FROM DUAL;