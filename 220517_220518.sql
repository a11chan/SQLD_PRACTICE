/*CREATE TABLE tb_subway_statn_tmp
(
	SUBWAY_STATN_NO char(6) NOT NULL
	, LN_NM varchar2(50) NOT NULL
	, STATN_NM varchar2(50) NOT NULL
	, CONSTRAINT PK_TB_SUBWAY_STATN_TMP PRIMARY KEY(SUBWAY_STATN_NO)
);*/

SELECT * FROM tb_subway_statn_tmp;

/*CREATE TABLE TB_SUBWAY_STATN_TK_GFF_TMP
(
  SUBWAY_STATN_NO char(6) NOT NULL,
  STD_YM char(6) NOT NULL,
  BEGIN_TIME char(4) NOT NULL,
  END_TIME CHAR(4) NOT NULL,
  TK_GFF_SE_CD VARCHAR2(6) NOT NULL,
  TK_GFF_CNT NUMBER(15) NOT NULL,
  CONSTRAINT PK_TB_SUBWAY_STATN_TK_GFF_TMP PRIMARY KEY
  (SUBWAY_STATN_NO, STD_YM, BEGIN_TIME, END_TIME, TK_GFF_SE_CD)
);*/

SELECT * FROM TB_SUBWAY_STATN_TK_GFF_TMP;

ALTER TABLE TB_SUBWAY_STATN_TK_GFF_TMP
ADD CONSTRAINT FK_TB_SUBWAY_STATN_TK_GFF_TMP1 -- 참조무결성 제약조건 생성
FOREIGN KEY (SUBWAY_STATN_NO)
REFERENCES TB_SUBWAY_STATN_TMP (SUBWAY_STATN_NO);

ALTER TABLE TB_SUBWAY_STATN_TMP ADD (OPER_YN CHAR(1));

ALTER TABLE TB_SUBWAY_STATN_TMP DROP COLUMN OPER_YN;

ALTER TABLE TB_SUBWAY_STATN_TMP ADD (OPER_YN CHAR(1) NULL);
ALTER TABLE TB_SUBWAY_STATN_TMP MODIFY (OPER_YN NUMBER(1) DEFAULT 0 NOT NULL NOVALIDATE);
ALTER TABLE TB_SUBWAY_STATN_TMP RENAME COLUMN OPER_YN TO OPERATION_YN;

ALTER TABLE TB_SUBWAY_STATN_TK_GFF_TMP DROP CONSTRAINT FK_TB_SUBWAY_STATN_TK_GFF_TMP1;

ALTER TABLE TB_SUBWAY_STATN_TK_GFF_TMP ADD CONSTRAINT FK_TB_SUBWAY_STATN_TK_GFF_TMP1
FOREIGN KEY (SUBWAY_STATN_NO) REFERENCES TB_SUBWAY_STATN_TMP (SUBWAY_STATN_NO);

RENAME TB_SUBWAY_STATN_TK_GFF_TMP TO TB_SUBWAY_STATN_TK_GFF_TMP_2;

TRUNCATE TABLE TB_SUBWAY_STATN_TK_GFF_TMP_2;

DROP TABLE TB_SUBWAY_STATN_TK_GFF_TMP_2;
DROP TABLE TB_SUBWAY_STATN_TMP;

CREATE TABLE TB_SUBWAY_STATN_TMP (
  SUBWAY_STATN_NO CHAR(6) NOT NULL,
  LN_NM VARCHAR2(50) NOT NULL,
  STATN_NM VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_TB_SUBWAY_STATN_TMP PRIMARY KEY (SUBWAY_STATN_NO)
);

INSERT INTO TB_SUBWAY_STATN_TMP T
(
    T.SUBWAY_STATN_NO 
  , T.LN_NM 
  , T.STATN_NM
)
VALUES
(
  '000032'
, '2호선'
, '강남'
)
;

COMMIT;

SELECT * FROM TB_SUBWAY_STATN_TMP;

UPDATE TB_SUBWAY_STATN_TMP A 
SET A.LN_NM = '녹색선'
, A.STATN_NM = '강남스타일'
WHERE A.SUBWAY_STATN_NO = '000032'
;

DELETE FROM TB_SUBWAY_STATN_TMP A
WHERE A.SUBWAY_STATN_NO = '000032'
;

SELECT DISTINCT A.INDUTY_CL_SE_CD
FROM TB_INDUTY_CL A
;

SELECT DISTINCT A.POPLTN_SE_CD, A.AGRDE_SE_CD
FROM TB_POPLTN A
;

SELECT SUBWAY_STATN_NO || '-' || STATN_NM || '(' || LN_NM ||')'
AS "지하철역번호-역명(노선명)"
FROM TB_SUBWAY_STATN
WHERE LN_NM = '9호선'
;

SELECT ( (1+1)*3 ) / 6 AS "연산결과" FROM DUAL;
--SELECT ( (1+1)*3 ) % 6 AS "연산결과" FROM DUAL; --에러 -> %연산자 지원 안 됨

UPDATE TB_SUBWAY_STATN 
SET STATN_NM = '역삼역'
WHERE STATN_NM = '역삼'
;

ROLLBACK;

SELECT * FROM TB_SUBWAY_STATN WHERE STATN_NM = '역삼';

COMMIT;

SELECT 
  A.ADRES_CL_CD
, A.ADRES_CL_NM
, A.ADRES_CL_SE_CD
, NVL(A.UPPER_ADRES_CL_CD,'(NULL)') UPPER_ADRES_CL_CD
FROM TB_ADRES_CL A
WHERE A.UPPER_ADRES_CL_CD IS NULL
;

SELECT A.BSSH_NO
, A.CMPNM_NM
, A.LNM_ADRES
FROM TB_BSSH A
WHERE A.LNM_ADRES LIKE '서울%'
  AND
    (  A.CMPNM_NM LIKE '%스타벅스%'
    OR A.CMPNM_NM LIKE '%이디야%'
    OR A.CMPNM_NM LIKE '%파스쿠찌%'
    )
  AND NOT A.LNM_ADRES LIKE '%강남구%'
;

SELECT A.SUBWAY_STATN_NO
, A.STD_YM
, A.BEGIN_TIME
, A.END_TIME
, CASE 
  WHEN A.TK_GFF_SE_CD = 'TGS001' THEN '승차'
  WHEN A.TK_GFF_SE_CD = 'TGS002' THEN '하차'
  END AS 승하차구분
, A.TK_GFF_CNT
FROM TB_SUBWAY_STATN_TK_GFF A
WHERE A.SUBWAY_STATN_NO = '000032'
AND A.STD_YM = '202010'
AND A.TK_GFF_SE_CD IN ('TGS001', 'TGS002')
AND NOT A.TK_GFF_CNT <100000
ORDER BY A.TK_GFF_CNT DESC
;

CREATE TABLE TB_CHAR
(
  CHAR_NO CHAR(4)
, CHAR_4 CHAR(4)
, CHAR_5 CHAR(5)
, CONSTRAINT PK_TB_CHAR PRIMARY KEY (CHAR_NO)
)
;

SELECT * FROM TB_CHAR;

INSERT INTO TB_CHAR (CHAR_NO, CHAR_4, CHAR_5)
VALUES ('1002', 'SQLD', 'SQLP');

INSERT INTO TB_CHAR (CHAR_NO, CHAR_4, CHAR_5)
VALUES ('1001', 'SQLD', 'SQLD');

SELECT 
    REPLACE(CHAR_4, ' ', '_') AS CHAR_4
  , REPLACE(CHAR_5, ' ', '_') AS CHAR_5
  FROM TB_CHAR 
;

SELECT CHAR_NO
  , REPLACE(CHAR_4, ' ', '_') AS CHAR_4
  , REPLACE(CHAR_5, ' ', '_') AS CHAR_5
  FROM TB_CHAR
  WHERE CHAR_4 = 'SQLD'
  AND CHAR_4 = CHAR_5
;

SELECT CHAR_NO
  , REPLACE(CHAR_4, ' ', '_') AS CHAR_4
  , REPLACE(CHAR_5, ' ', '_') AS CHAR_5
  FROM TB_CHAR
  WHERE CHAR_NO = '1002'
  AND CHAR_4 < CHAR_5
;

CREATE TABLE TB_VARCHAR2
(
  VARCHAR_NO CHAR(4)
, CHAR_4 CHAR(4)
, VARCHAR2_5 VARCHAR2(5)
, CONSTRAINT PK_TB_VARCHAR2 PRIMARY KEY (VARCHAR_NO)
)
;
SELECT * FROM TB_VARCHAR2;
INSERT INTO TB_VARCHAR2 (VARCHAR_NO, CHAR_4, VARCHAR2_5) VALUES
('1001', 'SQLD', 'SQLD ');
INSERT INTO TB_VARCHAR2 (VARCHAR_NO, CHAR_4, VARCHAR2_5) VALUES
('1002', 'SQLD', 'SQLP ');

SELECT 
  REPLACE(CHAR_4, ' ', '_') AS CHAR_4
, REPLACE(VARCHAR2_5, ' ', '_') AS VARCHAR_5
FROM TB_VARCHAR2
;

SELECT 
  REPLACE(CHAR_4, ' ', '_') AS CHAR_4
, REPLACE(VARCHAR2_5, ' ', '_') AS VARCHAR_5
FROM TB_VARCHAR2
WHERE VARCHAR_NO = '1001'
AND CHAR_4 = VARCHAR2_5
;

SELECT 
  REPLACE(CHAR_4, ' ', '_') AS CHAR_4
, REPLACE(VARCHAR2_5, ' ', '_') AS VARCHAR_5
FROM TB_VARCHAR2
WHERE VARCHAR_NO = '1001'
AND CHAR_4 = TRIM(VARCHAR2_5)
;

SELECT 
  REPLACE(CHAR_4, ' ', '_') AS CHAR_4
, REPLACE(VARCHAR2_5, ' ', '_') AS VARCHAR2_5
FROM TB_VARCHAR2 
WHERE VARCHAR_NO = '1001'
AND CHAR_4 = 'SQLD '
; -- CHAR 형은 공백을 문자로 취급하지 않으므로 정상 결과 출력
--CHAR_4|VARCHAR2_5|
--------+----------+
--SQLD  |SQLD_     |

SELECT 
  REPLACE(CHAR_4, ' ', '_') AS CHAR_4
, REPLACE(VARCHAR2_5, ' ', '_') AS VARCHAR2_5
FROM TB_VARCHAR2 
WHERE VARCHAR_NO = '1001'
AND VARCHAR2_5 = 'SQLD'
; -- 공집합 리턴, VARCHAR2 형은 공백도 문자로 취급하므로 공백이 없는 SQLD 문자열은 공백이 있는 SQLD 문자열과 다르다고 판단

SELECT ROWNUM AS RNUM
, A.BSSH_NO
, A.CMPNM_NM
, NVL(A.BHF_NM, '(NULL)') AS BHF_NM
, A.LNM_ADRES
FROM TB_BSSH A
WHERE ROWNUM <= 10
;

SELECT 
  LOWER('SQL Developer')
, UPPER('SQL Developer')
, ASCII('A')
, CHR('65')
, CONCAT('SQL', ' Developer')
, SUBSTR('SQL Developer',1,3)
, LENGTH('SQL')
FROM DUAL
;

SELECT A.INDUTY_CL_CD
, A.INDUTY_CL_NM
, A.INDUTY_CL_SE_CD
, NVL(UPPER_INDUTY_CL_CD, '최상위') AS "UPPER_INDUTY_CL_CD"
FROM TB_INDUTY_CL A
WHERE A.UPPER_INDUTY_CL_CD IS NULL 
;

SELECT 
  COUNT(*) AS "전체상가수"
, MAX(LO) AS "최대경도"
, MIN(LO) AS "최소경도"
, MAX(LA) AS "최대위도"
, MIN(LA) AS "최소위도"
FROM TB_BSSH
;

SELECT NVL(MAX(A.SUBWAY_STATN_NO), '지하철역 없음') AS SUBWAY_NO
, NVL(MAX(A.LN_NM), '노션명 없음') AS LN_NM
FROM TB_SUBWAY_STATN A
WHERE A.STATN_NM = '평양역'
;

SELECT A.POPLTN_SE_CD
, SUM(A.POPLTN_CNT) "인구수 합계"
FROM TB_POPLTN A
WHERE A.STD_YM = '202010'
GROUP BY A.POPLTN_SE_CD
;

SELECT A.POPLTN_SE_CD
, A.AGRDE_SE_CD
, SUM(A.POPLTN_CNT) AS "인구수합계"
FROM TB_POPLTN A
WHERE A.STD_YM = '202010'
GROUP BY A.POPLTN_SE_CD, A.AGRDE_SE_CD 
HAVING SUM(A.POPLTN_CNT) < 1000000
;
